name: Build and push docker image

on:
    push:
        branches:
            - dev2

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        env:
            GH_USER: ${{ secrets.GH_USER }}
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
            NAME: jomla-tourism
            TAG: ${{ github.sha }}
            TAG_LATEST: latest
            GHCR_REPO: ghcr.io/enzeetech/jomla-tourism
            UPLOAD_MAX_FILESIZE: "1024M"
            POST_MAX_SIZE: "1024M"
            MEMORY_LIMIT: "2048M"
            NIXPACKS_PHP_ROOT_DIR: "/app/public"
            APP_NAME: "Jomla Tourism"
            APP_ENV: production
            APP_KEY: base64:your-app-key
            APP_DEBUG: false
            APP_TIMEZONE: UTC
            APP_URL: https://jomla-stag.sociodev.com.my
            VITE_BASE_URL: https://jomla-stag.sociodev.com.my
            SANCTUM_STATEFUL_DOMAINS: jomla-stag.sociodev.com.my
            APP_LOCALE: "en"
            APP_FALLBACK_LOCALE: "en"
            APP_FAKER_LOCALE: "en_US"
            APP_MAINTENANCE_DRIVER: "file"
            APP_MAINTENANCE_STORE: "database"
            BCRYPT_ROUNDS: "12"
            LOG_CHANNEL: "stack"
            LOG_STACK: "single"
            LOG_DEPRECATIONS_CHANNEL: "null"
            LOG_LEVEL: "debug"
            DB_CONNECTION: "pgsql"
            DB_HOST: "localhost"
            DB_PORT: 5432
            DB_DATABASE: "your-dabase"
            DB_USERNAME: "your-user"
            DB_PASSWORD: "your-password"
            SESSION_DRIVER: "redis"
            SESSION_LIFETIME: "120"
            SESSION_ENCRYPT: "false"
            SESSION_PATH: "/"
            SESSION_DOMAIN: "null"
            SESSION_LOCK: "true"
            FILESYSTEM_DISK: "local"
            QUEUE_CONNECTION: "redis"
            CACHE_STORE: "redis"
            CACHE_PREFIX: ""
            REDIS_CLIENT: "predis"
            REDIS_HOST: "redis"
            REDIS_PASSWORD: "your-password"
            REDIS_PORT: "6379"
            REDIS_URL: "redis://redis:6379"
            REDIS_USERNAME: "redis"
            MAIL_MAILER: "log"
            MAIL_HOST: "127.0.0.1"
            MAIL_PORT: "2525"
            MAIL_USERNAME: "null"
            MAIL_PASSWORD: "null"
            MAIL_ENCRYPTION: "null"
            MAIL_FROM_ADDRESS: "hello@example.com"
            MAIL_FROM_NAME: "Laravel"
            AWS_ACCESS_KEY_ID: ""
            AWS_SECRET_ACCESS_KEY: ""
            AWS_DEFAULT_REGION: "us-east-1"
            AWS_BUCKET: ""
            AWS_USE_PATH_STYLE_ENDPOINT: "false"
            BROADCAST_CONNECTION: "pusher"
            PUSHER_APP_ID: "1"
            PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
            PUSHER_APP_SECRET: "secret"
            PUSHER_HOST: "soketi"
            PUSHER_PORT: "6001"
            PUSHER_SCHEME: "http"
            PUSHER_APP_CLUSTER: "mt1"
            VITE_PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
            VITE_PUSHER_HOST: https://jomla-stag.sociodev.com.my
            VITE_PUSHER_PORT: "6002"
            VITE_PUSHER_SCHEME: "http"
            VITE_PUSHER_APP_CLUSTER: "mt1"
            AZURE_CLIENT_ID: "your-azure-client-id"
            AZURE_CLIENT_SECRET: "your-azure-client-secret"
            AZURE_REDIRECT_URI: https://intranet-tourism.test/auth/azure/callback
            AZURE_TENANT_ID: "6223e1af-a146-4247-abcc-f04ad29fa785"
            PROXY: ""
            PORT: "8000"
            IS_LARAVEL: "true"
            SCOUT_DRIVER: "meilisearch"
            MEILISEARCH_HOST: "http://meilisearch:7700"
            MEILISEARCH_KEY: "your-password"
            SCOUT_QUEUE: "true"

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build and push Docker image
              run: |
                  export GHCR_TAG=$GHCR_REPO:$TAG
                  export GHCR_TAG_LATEST=$GHCR_REPO:$TAG_LATEST

                  echo $GHCR_TAG
                  echo $GHCR_TAG_LATEST

                  # place variables into the .env file
                  echo "UPLOAD_MAX_FILESIZE=\"$UPLOAD_MAX_FILESIZE\"" >> .env
                  echo "POST_MAX_SIZE=\"$POST_MAX_SIZE\"" >> .env
                  echo "MEMORY_LIMIT=\"$MEMORY_LIMIT\"" >> .env
                  echo "NIXPACKS_PHP_ROOT_DIR=\"$NIXPACKS_PHP_ROOT_DIR\"" >> .env
                  echo "APP_NAME=\"$APP_NAME\"" >> .env
                  echo "APP_ENV=\"$APP_ENV\"" >> .env
                  echo "APP_KEY=\"$APP_KEY\"" >> .env
                  echo "APP_DEBUG=\"$APP_DEBUG\"" >> .env
                  echo "APP_TIMEZONE=\"$APP_TIMEZONE\"" >> .env
                  echo "APP_URL=\"$APP_URL\"" >> .env
                  echo "VITE_BASE_URL=\"$VITE_BASE_URL\"" >> .env
                  echo "SANCTUM_STATEFUL_DOMAINS=\"$SANCTUM_STATEFUL_DOMAINS\"" >> .env
                  echo "APP_LOCALE=\"$APP_LOCALE\"" >> .env
                  echo "APP_FALLBACK_LOCALE=\"$APP_FALLBACK_LOCALE\"" >> .env
                  echo "APP_FAKER_LOCALE=\"$APP_FAKER_LOCALE\"" >> .env
                  echo "APP_MAINTENANCE_DRIVER=\"$APP_MAINTENANCE_DRIVER\"" >> .env
                  echo "APP_MAINTENANCE_STORE=\"$APP_MAINTENANCE_STORE\"" >> .env
                  echo "BCRYPT_ROUNDS=\"$BCRYPT_ROUNDS\"" >> .env
                  echo "LOG_CHANNEL=\"$LOG_CHANNEL\"" >> .env
                  echo "LOG_STACK=\"$LOG_STACK\"" >> .env
                  echo "LOG_DEPRECATIONS_CHANNEL=\"$LOG_DEPRECATIONS_CHANNEL\"" >> .env
                  echo "LOG_LEVEL=\"$LOG_LEVEL\"" >> .env
                  echo "DB_CONNECTION=\"$DB_CONNECTION\"" >> .env
                  echo "DB_HOST=\"$DB_HOST\"" >> .env
                  echo "DB_PORT=\"$DB_PORT\"" >> .env
                  echo "DB_DATABASE=\"$DB_DATABASE\"" >> .env
                  echo "DB_USERNAME=\"$DB_USERNAME\"" >> .env
                  echo "DB_PASSWORD=\"$DB_PASSWORD\"" >> .env
                  echo "SESSION_DRIVER=\"$SESSION_DRIVER\"" >> .env
                  echo "SESSION_LIFETIME=\"$SESSION_LIFETIME\"" >> .env
                  echo "SESSION_ENCRYPT=\"$SESSION_ENCRYPT\"" >> .env
                  echo "SESSION_PATH=\"$SESSION_PATH\"" >> .env
                  echo "SESSION_DOMAIN=\"$SESSION_DOMAIN\"" >> .env
                  echo "SESSION_LOCK=\"$SESSION_LOCK\"" >> .env
                  echo "FILESYSTEM_DISK=\"$FILESYSTEM_DISK\"" >> .env
                  echo "QUEUE_CONNECTION=\"$QUEUE_CONNECTION\"" >> .env
                  echo "CACHE_STORE=\"$CACHE_STORE\"" >> .env
                  echo "CACHE_PREFIX=\"$CACHE_PREFIX\"" >> .env
                  echo "REDIS_CLIENT=\"$REDIS_CLIENT\"" >> .env
                  echo "REDIS_HOST=\"$REDIS_HOST\"" >> .env
                  echo "REDIS_PASSWORD=\"$REDIS_PASSWORD\"" >> .env
                  echo "REDIS_PORT=\"$REDIS_PORT\"" >> .env
                  echo "REDIS_URL=\"$REDIS_URL\"" >> .env
                  echo "REDIS_USERNAME=\"$REDIS_USERNAME\"" >> .env
                  echo "MAIL_MAILER=\"$MAIL_MAILER\"" >> .env
                  echo "MAIL_HOST=\"$MAIL_HOST\"" >> .env
                  echo "MAIL_PORT=\"$MAIL_PORT\"" >> .env
                  echo "MAIL_USERNAME=\"$MAIL_USERNAME\"" >> .env
                  echo "MAIL_PASSWORD=\"$MAIL_PASSWORD\"" >> .env
                  echo "MAIL_ENCRYPTION=\"$MAIL_ENCRYPTION\"" >> .env
                  echo "MAIL_FROM_ADDRESS=\"$MAIL_FROM_ADDRESS\"" >> .env
                  echo "MAIL_FROM_NAME=\"$MAIL_FROM_NAME\"" >> .env
                  echo "AWS_ACCESS_KEY_ID=\"$AWS_ACCESS_KEY_ID\"" >> .env
                  echo "AWS_SECRET_ACCESS_KEY=\"$AWS_SECRET_ACCESS_KEY\"" >> .env
                  echo "AWS_DEFAULT_REGION=\"$AWS_DEFAULT_REGION\"" >> .env
                  echo "AWS_BUCKET=\"$AWS_BUCKET\"" >> .env
                  echo "AWS_USE_PATH_STYLE_ENDPOINT=\"$AWS_USE_PATH_STYLE_ENDPOINT\"" >> .env
                  echo "BROADCAST_CONNECTION=\"$BROADCAST_CONNECTION\"" >> .env
                  echo "PUSHER_APP_ID=\"$PUSHER_APP_ID\"" >> .env
                  echo "PUSHER_APP_KEY=\"$PUSHER_APP_KEY\"" >> .env
                  echo "PUSHER_APP_SECRET=\"$PUSHER_APP_SECRET\"" >> .env
                  echo "PUSHER_HOST=\"$PUSHER_HOST\"" >> .env
                  echo "PUSHER_PORT=\"$PUSHER_PORT\"" >> .env
                  echo "PUSHER_SCHEME=\"$PUSHER_SCHEME\"" >> .env
                  echo "PUSHER_APP_CLUSTER=\"$PUSHER_APP_CLUSTER\"" >> .env
                  echo "VITE_PUSHER_APP_KEY=\"$VITE_PUSHER_APP_KEY\"" >> .env
                  echo "VITE_PUSHER_HOST=\"$VITE_PUSHER_HOST\"" >> .env
                  echo "VITE_PUSHER_PORT=\"$VITE_PUSHER_PORT\"" >> .env
                  echo "VITE_PUSHER_SCHEME=\"$VITE_PUSHER_SCHEME\"" >> .env
                  echo "VITE_PUSHER_APP_CLUSTER=\"$VITE_PUSHER_APP_CLUSTER\"" >> .env
                  echo "AZURE_CLIENT_ID=\"$AZURE_CLIENT_ID\"" >> .env
                  echo "AZURE_CLIENT_SECRET=\"$AZURE_CLIENT_SECRET\"" >> .env
                  echo "AZURE_REDIRECT_URI=\"$AZURE_REDIRECT_URI\"" >> .env
                  echo "AZURE_TENANT_ID=\"$AZURE_TENANT_ID\"" >> .env
                  echo "PROXY=\"$PROXY\"" >> .env
                  echo "PORT=\"$PORT\"" >> .env
                  echo "IS_LARAVEL=\"$IS_LARAVEL\"" >> .env
                  echo "SCOUT_DRIVER=\"$SCOUT_DRIVER\"" >> .env
                  echo "MEILISEARCH_HOST=\"$MEILISEARCH_HOST\"" >> .env
                  echo "MEILISEARCH_KEY=\"$MEILISEARCH_KEY\"" >> .env
                  echo "SCOUT_QUEUE=\"$SCOUT_QUEUE\"" >> .env



                  docker build -t "$GHCR_TAG" -t "$GHCR_TAG_LATEST" -f .nixpacks/Dockerfile .

                  docker login ghcr.io -u "$GH_USER" -p "$GH_TOKEN"
                  docker push "$GHCR_TAG"
                  docker push "$GHCR_TAG_LATEST"
    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Enter the server
              uses: appleboy/ssh-action@v1.1.0
              with:
                  host: ${{ secrets.DEPLOY_SERVER }}
                  username: ${{ secrets.DEPLOY_USER }}
                  password: ${{ secrets.DEPLOY_PASSWORD }}
                  port: ${{ secrets.DEPLOY_PORT }} # default is 22
                  script: |
                      cd /home/${{ secrets.DEPLOY_USER }}/intranet-tourism-app
                      docker pull ghcr.io/enzeetech/jomla-tourism:latest
                      docker compose down
                      docker compose up -d

                      # migrate database
                      docker exec laravel_app php /app/artisan migrate --force
